services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./api/app/db/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    image: assistente-tintas-api
    env_file:
      - .env
    environment:
      # garante que variáveis críticas realmente entrem no container
      DATABASE_URL: ${DATABASE_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ALG: ${JWT_ALG}
      JWT_EXP_MIN: ${JWT_EXP_MIN}
      PYTHONUNBUFFERED: "1"
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./api/app:/app/app

volumes:
  db_data:
